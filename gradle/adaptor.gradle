apply plugin: 'org.unbroken-dome.test-sets'
apply plugin: 'com.github.johnrengelman.plugin-shadow'

group = 'nl.esciencecenter.xenon.adaptors'

testSets {
    integrationTest
    fixedClientEnvironmentTest
}

integrationTest.description = 'Run the integration tests against docker containers'
fixedClientEnvironmentTest.description = 'Run the integration tests within and against docker containers, should be run within `nlesc/xenon-fixed-client` docker container'

check.dependsOn integrationTest
integrationTest.mustRunAfter test

dependencies {
    compile group: 'nl.esciencecenter.xenon', name: 'xenon-core', version: '3.0.0'
//    testCompile project(':core')

    integrationTestCompile group: 'junit', name: 'junit', version: '4.12'
    integrationTestCompile group: 'com.palantir.docker.compose', name: 'docker-compose-rule-junit4', version: '0.33.0'

//    integrationTestCompile project(':test-utils')
    integrationTestCompile group: 'nl.esciencecenter.xenon', name: 'test-utils', version: '3.0.0'

//    fixedClientEnvironmentTestCompile group: 'com.palantir.docker.compose', name: 'docker-compose-rule-junit4', version: '0.33.0'
//    fixedClientEnvironmentTestCompile group: 'junit', name: 'junit', version: '4.12'
//    fixedClientEnvironmentTestCompile project(':test-utils')
}

shadowJar {
    // we ship adaptors always as jar with shaded deps
    classifier = null
    mergeServiceFiles()
    dependencies {
       exclude(dependency('nl.esciencecenter.xenon:xenon-core:3.0.0'))
    }
}

// make sure the dependencies of adaptors are not shadowed to same prefix 'shadow'
configureRelocationShadowJar.prefix = project.name.replaceAll('-', '_') + '.shadow'

task jacocoIntegrationTestReport(type: JacocoReport) {
    description 'Generate coverage report of integration tests'
    group 'Code coverage reporting'
    executionData integrationTest
    sourceSets sourceSets.main
    reports {
        xml.enabled = true // codecov depends on xml format report
    }
}

task jacocoFixedClientEnvironmentTestReport(type: JacocoReport) {
    description 'Generate coverage report of fixed client environment tests'
    group 'Code coverage reporting'
    executionData fixedClientEnvironmentTest
    sourceSets sourceSets.main
    reports {
        xml.enabled = true // codecov depends on xml format report
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            artifact shadowJar
            artifact javadocJar
            artifact sourcesJar
        }
    }
}
