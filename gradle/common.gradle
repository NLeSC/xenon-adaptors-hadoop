apply plugin: 'java'
apply plugin: 'distribution'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'jacoco'
apply plugin: 'com.diffplug.gradle.spotless'
apply plugin: 'com.github.hierynomus.license'

defaultTasks 'clean', 'assemble', 'test'

//    METADATA
// ==============
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://dl.bintray.com/palantir/releases' // docker-compose-rule is published on bintray
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

//sourceSets {
//    docGenerator
//    liveTests
//}

//configurations {
//    docGeneratorCompile.extendsFrom compile
//    docGeneratorRuntime.extendsFrom runtime
//}

//testSets {
//    liveTest {
//        options {
//            // Pass all -D arguments from gradlew to tests
//            systemProperties(System.getProperties())
//        }
//    }
//}

wrapper {

}

// See progress of tests
tasks.withType(Test) {
    // only verbose logging on when CI environment var is set, because on CI we can't look at html test reports
    if (System.getenv("CI")) {
        testLogging {
            events 'started', 'passed', 'skipped', 'failed'
            exceptionFormat 'full'
            showStackTraces true
        }
    }
}

spotless {
    java {
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
        removeUnusedImports()

        replace      'Not enough space after if', 'if(', 'if ('
        replaceRegex 'Too much space after if', 'if +\\(', 'if ('

        replace      'Not enough space after for', 'for(', 'for ('
        replaceRegex 'Too much space after for', 'for +\\(', 'for ('

        replace      'Not enough space after while', 'while(', 'while ('
        replaceRegex 'Too much space after while', 'while +\\(', 'while ('

        replace      'Not enough space after try', 'try{', 'try {'
        replaceRegex 'Too much space after try', 'try +\\{', 'try {'

        replace      'Not enough space between brackets', '){', ') {'
    }
}

license {
    ext.copyright_year = 2018
    ext.copyright_owner = 'Netherlands eScience Center'
    header rootProject.file('gradle/HEADER')
    strictCheck true
    excludes(["**/create_symlinks*", "**/fixtures/**", "**/logback.xml"])
    mapping {
        // IntelliJ IDEA gives "Dangling Javadoc comment." warning when default JAVADOC_STYLE is used,
        // so switch to comment style
        java = 'SLASHSTAR_STYLE'
    }
}

licenseFormat.description = "Applies the license found in the header file in files missing the header"

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'xenon'
        userOrg = 'nlesc'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://nlesc.github.io/Xenon'
        vcsUrl = 'https://github.com/NLeSC/xenon-adaptors-hadoop.git'
        issueTrackerUrl = 'https://github.com/NLeSC/xenon-adaptors-hadoop/issues'
    }
    publications = ['MyPublication']
}
tasks.publish.dependsOn 'bintrayUpload'

task javadocJar(type: Jar, dependsOn: javadoc) {
    description "Creates jar file of javadoc"
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    description "Creates jar file of Java sources"
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
